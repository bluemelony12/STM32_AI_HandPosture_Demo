/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAIN_MENUVIEWBASE_HPP
#define MAIN_MENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_menu_screen/Main_MenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Main_MenuViewBase : public touchgfx::View<Main_MenuPresenter>
{
public:
    Main_MenuViewBase();
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image backgronds;
    touchgfx::Image Title_Bar;
    touchgfx::TextArea Title;
    touchgfx::TextArea GitLink;
    touchgfx::TextArea Disc1;
    touchgfx::TextArea Disc2;
    touchgfx::TextArea Disc3;
    touchgfx::TextArea Disc4;
    touchgfx::Circle Menu1_B;
    touchgfx::PainterRGB565 Menu1_BPainter;
    touchgfx::Circle Menu2_B;
    touchgfx::PainterRGB565 Menu2_BPainter;
    touchgfx::Circle Menu3_B;
    touchgfx::PainterRGB565 Menu3_BPainter;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  Menu1;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  Menu2;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  Menu3;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Main_MenuViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MAIN_MENUVIEWBASE_HPP
