/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LIGHT_DIM_CONTROLVIEWBASE_HPP
#define LIGHT_DIM_CONTROLVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/light_dim_control_screen/Light_Dim_ControlPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>

class Light_Dim_ControlViewBase : public touchgfx::View<Light_Dim_ControlPresenter>
{
public:
    Light_Dim_ControlViewBase();
    virtual ~Light_Dim_ControlViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image backgronds;
    touchgfx::Image Title_Bar;
    touchgfx::TextArea Title;
    touchgfx::TextArea Disc1;
    touchgfx::ButtonWithIcon BackButton;
    touchgfx::ScalableImage Bulb;
    touchgfx::Image DimLight;
    touchgfx::TextAreaWithOneWildcard Dim_Val;
    touchgfx::Gauge gauge1;
    touchgfx::PainterRGB565Bitmap gauge1Painter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t DIM_VAL_SIZE = 5;
    touchgfx::Unicode::UnicodeChar Dim_ValBuffer[DIM_VAL_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Light_Dim_ControlViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // LIGHT_DIM_CONTROLVIEWBASE_HPP
