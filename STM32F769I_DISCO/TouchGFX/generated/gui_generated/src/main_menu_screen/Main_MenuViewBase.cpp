/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_menu_screen/Main_MenuViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Main_MenuViewBase::Main_MenuViewBase() :
    flexButtonCallback(this, &Main_MenuViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backgronds.setXY(0, 0);
    backgronds.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_800X480_HIVE_ID));
    add(backgronds);

    Title_Bar.setXY(0, 0);
    Title_Bar.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BARS_800X480_BOTTOM_DIM_DARK_ID));
    add(Title_Bar);

    Title.setXY(148, 17);
    Title.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Title.setLinespacing(0);
    Title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OU2G));
    add(Title);

    GitLink.setXY(515, 438);
    GitLink.setColor(touchgfx::Color::getColorFromRGB(163, 163, 163));
    GitLink.setLinespacing(0);
    GitLink.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8TG1));
    add(GitLink);

    Disc1.setXY(295, 90);
    Disc1.setColor(touchgfx::Color::getColorFromRGB(89, 247, 74));
    Disc1.setLinespacing(0);
    Disc1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NAQV));
    add(Disc1);

    Disc2.setXY(86, 373);
    Disc2.setColor(touchgfx::Color::getColorFromRGB(242, 242, 242));
    Disc2.setLinespacing(0);
    Disc2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HUUO));
    add(Disc2);

    Disc3.setXY(313, 373);
    Disc3.setColor(touchgfx::Color::getColorFromRGB(242, 242, 242));
    Disc3.setLinespacing(0);
    Disc3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0S7M));
    add(Disc3);

    Disc4.setXY(577, 373);
    Disc4.setColor(touchgfx::Color::getColorFromRGB(242, 242, 242));
    Disc4.setLinespacing(0);
    Disc4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SCMP));
    add(Disc4);

    Menu1_B.setPosition(43, 140, 220, 220);
    Menu1_B.setCenter(110, 110);
    Menu1_B.setRadius(110);
    Menu1_B.setLineWidth(0);
    Menu1_B.setArc(0, 360);
    Menu1_BPainter.setColor(touchgfx::Color::getColorFromRGB(76, 76, 76));
    Menu1_B.setPainter(Menu1_BPainter);
    add(Menu1_B);

    Menu2_B.setPosition(290, 140, 220, 220);
    Menu2_B.setCenter(110, 110);
    Menu2_B.setRadius(110);
    Menu2_B.setLineWidth(0);
    Menu2_B.setArc(0, 360);
    Menu2_BPainter.setColor(touchgfx::Color::getColorFromRGB(76, 76, 76));
    Menu2_B.setPainter(Menu2_BPainter);
    add(Menu2_B);

    Menu3_B.setPosition(532, 140, 220, 220);
    Menu3_B.setCenter(110, 110);
    Menu3_B.setRadius(110);
    Menu3_B.setLineWidth(0);
    Menu3_B.setArc(0, 360);
    Menu3_BPainter.setColor(touchgfx::Color::getColorFromRGB(76, 76, 76));
    Menu3_B.setPainter(Menu3_BPainter);
    add(Menu3_B);

    Menu1.setBitmaps(Bitmap(BITMAP_HANDS_ID), Bitmap(BITMAP_HANDS_ID));
    Menu1.setBitmapXY(0, 0);
    Menu1.setAction(flexButtonCallback);
    Menu1.setPosition(53, 150, 200, 200);
    add(Menu1);

    Menu2.setBitmaps(Bitmap(BITMAP_LIGHT_ID), Bitmap(BITMAP_LIGHT_ID));
    Menu2.setBitmapXY(0, 0);
    Menu2.setAction(flexButtonCallback);
    Menu2.setPosition(301, 151, 200, 200);
    add(Menu2);

    Menu3.setBitmaps(Bitmap(BITMAP_SELECT_ID), Bitmap(BITMAP_SELECT_ID));
    Menu3.setBitmapXY(0, 0);
    Menu3.setAction(flexButtonCallback);
    Menu3.setPosition(542, 150, 200, 200);
    add(Menu3);
}

Main_MenuViewBase::~Main_MenuViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Main_MenuViewBase::setupScreen()
{

}

void Main_MenuViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Menu1)
    {
        //Move_Menu1
        //When Menu1 clicked change screen to Hand_Posture
        //Go to Hand_Posture with screen transition towards East
        application().gotoHand_PostureScreenSlideTransitionEast();
    }
    if (&src == &Menu2)
    {
        //Move_Menu2
        //When Menu2 clicked change screen to Light_Dim_Control
        //Go to Light_Dim_Control with screen transition towards East
        application().gotoLight_Dim_ControlScreenSlideTransitionEast();
    }
    if (&src == &Menu3)
    {
        //Move_Menu3
        //When Menu3 clicked change screen to Select_Target
        //Go to Select_Target with screen transition towards East
        application().gotoSelect_TargetScreenSlideTransitionEast();
    }
}
